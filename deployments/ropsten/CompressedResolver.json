{
    "address": "0x8DAc46D1DEc370f4fbEf3C71CdaB3C63b180ef33",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_preProcessor",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_processor",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256[]",
                    "name": "file",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "postProcess",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "res",
                    "type": "bytes"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "postProcessor",
            "outputs": [
                {
                    "internalType": "contract IPostProcessResolver",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "preProcess",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "_res",
                    "type": "bytes"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "preProcessor",
            "outputs": [
                {
                    "internalType": "contract IPreProcessResolver",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256[][]",
                    "name": "files",
                    "type": "uint256[][]"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                },
                {
                    "internalType": "bytes",
                    "name": "preProcessorData",
                    "type": "bytes"
                }
            ],
            "name": "process",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "resp",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "processor",
            "outputs": [
                {
                    "internalType": "contract IProcessResolver",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        }
    ],
    "transactionHash": "0x2bed9b278645c2d112990e4432e62e5c1676c27c80e8bf28c8bc266180bf5b76",
    "receipt": {
        "to": null,
        "from": "0xB666C13b621568FeC210724DF161604adccfA257",
        "contractAddress": "0x8DAc46D1DEc370f4fbEf3C71CdaB3C63b180ef33",
        "transactionIndex": 4,
        "gasUsed": "543075",
        "logsBloom": "0x
        "blockHash": "0xe922506231f873f2bff176a4ee51e844172f47c09ba8a2f8deba83971ea6bbcd",
        "transactionHash": "0x2bed9b278645c2d112990e4432e62e5c1676c27c80e8bf28c8bc266180bf5b76",
        "logs": [],
        "blockNumber": 11608675,
        "cumulativeGasUsed": "1365201",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x47cE00De0bd8Ed8FAbd335FE1EA8283284FfeC68", "0x47cE00De0bd8Ed8FAbd335FE1EA8283284FfeC68"],
    "solcInputHash": "0af8193e5e4b5c871898e5ceb8b8a673",
    "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_preProcessor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_processor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"file\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"postProcess\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"res\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"postProcessor\",\"outputs\":[{\"internalType\":\"contract IPostProcessResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"preProcess\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_res\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preProcessor\",\"outputs\":[{\"internalType\":\"contract IPreProcessResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"files\",\"type\":\"uint256[][]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"preProcessorData\",\"type\":\"bytes\"}],\"name\":\"process\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"resp\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processor\",\"outputs\":[{\"internalType\":\"contract IProcessResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nugg Labs - @danny7even & @dub6ix\",\"details\":\"hold my margarita\",\"kind\":\"dev\",\"methods\":{},\"title\":\"DotNugg V1 - onchain encoder/decoder for dotnugg files\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"yoU CAN'T HaVe ImAgES oN THe BlOCkcHAIn\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/CompressedResolver.sol\":\"CompressedResolver\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/src/CompressedResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport './interfaces/IResolver.sol';\\n\\n/**\\n * @title DotNugg V1 - onchain encoder/decoder for dotnugg files\\n * @author Nugg Labs - @danny7even & @dub6ix\\n * @notice yoU CAN'T HaVe ImAgES oN THe BlOCkcHAIn\\n * @dev hold my margarita\\n */\\ncontract CompressedResolver is INuggFtProcessor {\\n    IPostProcessResolver public immutable override postProcessor;\\n\\n    IProcessResolver public immutable override processor;\\n\\n    IPreProcessResolver public immutable override preProcessor;\\n\\n    constructor(address _preProcessor, address _processor) {\\n        postProcessor = IPostProcessResolver(address(this));\\n        preProcessor = IPreProcessResolver(_preProcessor);\\n        processor = IProcessResolver(_processor);\\n    }\\n\\n    function preProcess(bytes memory data) public view override returns (bytes memory _res) {\\n        return preProcessor.preProcess(data);\\n    }\\n\\n    function process(\\n        uint256[][] memory files,\\n        bytes memory data,\\n        bytes memory preProcessorData\\n    ) public view override returns (uint256[] memory resp) {\\n        return processor.process(files, data, preProcessorData);\\n    }\\n\\n    function postProcess(\\n        uint256[] memory file,\\n        bytes memory,\\n        bytes memory\\n    ) public pure override returns (bytes memory res) {\\n        res = abi.encode(file);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) public pure override(INuggFtProcessor) returns (bool) {\\n        return\\n            interfaceId == type(IPostProcessResolver).interfaceId ||\\n            interfaceId == type(INuggFtProcessor).interfaceId ||\\n            interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x44ee02edf1db1a0851ede9d4508f5b8a4881ba3c847bc1997e3371fed0d1b9ec\",\"license\":\"MIT\"},\"contracts/src/erc165/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x80ad8fd0a17bb32ad123b37e3a8fd331ddfa0ddf565028b62a8e67071cc1bb60\",\"license\":\"MIT\"},\"contracts/src/interfaces/IResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport '../erc165/IERC165.sol';\\n\\ninterface IProcessResolver is IERC165 {\\n    function process(\\n        uint256[][] memory files,\\n        bytes memory data,\\n        bytes memory preProcessData\\n    ) external view returns (uint256[] memory file);\\n\\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool);\\n}\\n\\ninterface IPreProcessResolver is IERC165 {\\n    function preProcess(bytes memory data) external view returns (bytes memory preProcessData);\\n\\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool);\\n}\\n\\ninterface IPostProcessResolver is IERC165 {\\n    function postProcess(\\n        uint256[] memory file,\\n        bytes memory data,\\n        bytes memory preProcessData\\n    ) external view returns (bytes memory res);\\n\\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool);\\n}\\n\\ninterface INuggFtProcessor is IERC165, IPostProcessResolver, IProcessResolver, IPreProcessResolver {\\n    function postProcessor() external view returns (IPostProcessResolver);\\n\\n    function preProcessor() external view returns (IPreProcessResolver);\\n\\n    function processor() external view returns (IProcessResolver);\\n\\n    function supportsInterface(bytes4 interfaceId) external view override(IERC165, IPostProcessResolver, IProcessResolver, IPreProcessResolver) returns (bool);\\n}\\n\",\"keccak256\":\"0x39d2d8a90ac76316a6e6ce6dedbfd5a2aca907f6c36436bb528700aa8ac18b82\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60e060405234801561001057600080fd5b506040516109b73803806109b783398101604081905261002f9161006f565b30606090811b6080526001600160601b031992811b831660c0521b1660a0526100a1565b80516001600160a01b038116811461006a57600080fd5b919050565b60008060408385031215610081578182fd5b61008a83610053565b915061009860208401610053565b90509250929050565b60805160601c60a05160601c60c05160601c6108d16100e66000396000818160bf01526101e501526000818161015801526102b30152600061011101526108d16000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c806301ffc9a7146100725780634a0ef7031461009a5780637a99b292146100ba5780638a61d304146100f9578063b17400661461010c578063c142c49614610133578063ce1b1d4314610153575b600080fd5b6100856100803660046105d5565b61017a565b60405190151581526020015b60405180910390f35b6100ad6100a8366004610604565b6101cb565b60405161009191906107c8565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610091565b6100ad61010736600461058a565b61026e565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b610146610141366004610403565b610299565b6040516100919190610784565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216638b9e1aa360e01b14806101aa57506001600160e01b031982166240966160e41b145b806101c557506001600160e01b031982166301ffc9a760e01b145b92915050565b604051634a0ef70360e01b81526060906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634a0ef7039061021a9085906004016107c8565b60006040518083038186803b15801561023257600080fd5b505afa158015610246573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101c59190810190610636565b6060836040516020016102819190610784565b60405160208183030381529060405290509392505050565b6040516360a1624b60e11b81526060906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c142c496906102ec908790879087906004016106d4565b60006040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034091908101906104f8565b949350505050565b600082601f830112610358578081fd5b8135602061036d6103688361080b565b6107db565b80838252828201915082860187848660051b890101111561038c578586fd5b855b858110156103aa5781358452928401929084019060010161038e565b5090979650505050505050565b600082601f8301126103c7578081fd5b81356103d56103688261082e565b8181528460208386010111156103e9578283fd5b816020850160208301379081016020019190915292915050565b600080600060608486031215610417578283fd5b83356001600160401b038082111561042d578485fd5b818601915086601f830112610440578485fd5b813560206104506103688361080b565b8083825282820191508286018b848660051b890101111561046f57898afd5b895b858110156104a857813587811115610487578b8cfd5b6104958e87838c0101610348565b8552509284019290840190600101610471565b509098505050870135925050808211156104c0578384fd5b6104cc878388016103b7565b935060408601359150808211156104e1578283fd5b506104ee868287016103b7565b9150509250925092565b6000602080838503121561050a578182fd5b82516001600160401b0381111561051f578283fd5b8301601f8101851361052f578283fd5b805161053d6103688261080b565b80828252848201915084840188868560051b870101111561055c578687fd5b8694505b8385101561057e578051835260019490940193918501918501610560565b50979650505050505050565b60008060006060848603121561059e578283fd5b83356001600160401b03808211156105b4578485fd5b6105c087838801610348565b945060208601359150808211156104c0578384fd5b6000602082840312156105e6578081fd5b81356001600160e01b0319811681146105fd578182fd5b9392505050565b600060208284031215610615578081fd5b81356001600160401b0381111561062a578182fd5b610340848285016103b7565b600060208284031215610647578081fd5b81516001600160401b0381111561065c578182fd5b8201601f8101841361066c578182fd5b805161067a6103688261082e565b81815285602083850101111561068e578384fd5b61069f826020830160208601610855565b95945050505050565b600081518084526106c0816020860160208601610855565b601f01601f19169290920160200192915050565b6000606082016060835280865180835260808501915060808160051b86010192506020808901855b8381101561075057878603607f19018552815180518088529084019084880190895b8181101561073a5783518352928601929186019160010161071e565b50909750505093820193908201906001016106fc565b50508584038187015250505061076681866106a8565b9050828103604084015261077a81856106a8565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107bc578351835292840192918401916001016107a0565b50909695505050505050565b6020815260006105fd60208301846106a8565b604051601f8201601f191681016001600160401b038111828210171561080357610803610885565b604052919050565b60006001600160401b0382111561082457610824610885565b5060051b60200190565b60006001600160401b0382111561084757610847610885565b50601f01601f191660200190565b60005b83811015610870578181015183820152602001610858565b8381111561087f576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212205094f2a27f7ffea5629de987267b1dfa084176fb46a8217d2107fae0f31cb90064736f6c63430008040033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061006d5760003560e01c806301ffc9a7146100725780634a0ef7031461009a5780637a99b292146100ba5780638a61d304146100f9578063b17400661461010c578063c142c49614610133578063ce1b1d4314610153575b600080fd5b6100856100803660046105d5565b61017a565b60405190151581526020015b60405180910390f35b6100ad6100a8366004610604565b6101cb565b60405161009191906107c8565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610091565b6100ad61010736600461058a565b61026e565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b610146610141366004610403565b610299565b6040516100919190610784565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216638b9e1aa360e01b14806101aa57506001600160e01b031982166240966160e41b145b806101c557506001600160e01b031982166301ffc9a760e01b145b92915050565b604051634a0ef70360e01b81526060906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634a0ef7039061021a9085906004016107c8565b60006040518083038186803b15801561023257600080fd5b505afa158015610246573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101c59190810190610636565b6060836040516020016102819190610784565b60405160208183030381529060405290509392505050565b6040516360a1624b60e11b81526060906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c142c496906102ec908790879087906004016106d4565b60006040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034091908101906104f8565b949350505050565b600082601f830112610358578081fd5b8135602061036d6103688361080b565b6107db565b80838252828201915082860187848660051b890101111561038c578586fd5b855b858110156103aa5781358452928401929084019060010161038e565b5090979650505050505050565b600082601f8301126103c7578081fd5b81356103d56103688261082e565b8181528460208386010111156103e9578283fd5b816020850160208301379081016020019190915292915050565b600080600060608486031215610417578283fd5b83356001600160401b038082111561042d578485fd5b818601915086601f830112610440578485fd5b813560206104506103688361080b565b8083825282820191508286018b848660051b890101111561046f57898afd5b895b858110156104a857813587811115610487578b8cfd5b6104958e87838c0101610348565b8552509284019290840190600101610471565b509098505050870135925050808211156104c0578384fd5b6104cc878388016103b7565b935060408601359150808211156104e1578283fd5b506104ee868287016103b7565b9150509250925092565b6000602080838503121561050a578182fd5b82516001600160401b0381111561051f578283fd5b8301601f8101851361052f578283fd5b805161053d6103688261080b565b80828252848201915084840188868560051b870101111561055c578687fd5b8694505b8385101561057e578051835260019490940193918501918501610560565b50979650505050505050565b60008060006060848603121561059e578283fd5b83356001600160401b03808211156105b4578485fd5b6105c087838801610348565b945060208601359150808211156104c0578384fd5b6000602082840312156105e6578081fd5b81356001600160e01b0319811681146105fd578182fd5b9392505050565b600060208284031215610615578081fd5b81356001600160401b0381111561062a578182fd5b610340848285016103b7565b600060208284031215610647578081fd5b81516001600160401b0381111561065c578182fd5b8201601f8101841361066c578182fd5b805161067a6103688261082e565b81815285602083850101111561068e578384fd5b61069f826020830160208601610855565b95945050505050565b600081518084526106c0816020860160208601610855565b601f01601f19169290920160200192915050565b6000606082016060835280865180835260808501915060808160051b86010192506020808901855b8381101561075057878603607f19018552815180518088529084019084880190895b8181101561073a5783518352928601929186019160010161071e565b50909750505093820193908201906001016106fc565b50508584038187015250505061076681866106a8565b9050828103604084015261077a81856106a8565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107bc578351835292840192918401916001016107a0565b50909695505050505050565b6020815260006105fd60208301846106a8565b604051601f8201601f191681016001600160401b038111828210171561080357610803610885565b604052919050565b60006001600160401b0382111561082457610824610885565b5060051b60200190565b60006001600160401b0382111561084757610847610885565b50601f01601f191660200190565b60005b83811015610870578181015183820152602001610858565b8381111561087f576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212205094f2a27f7ffea5629de987267b1dfa084176fb46a8217d2107fae0f31cb90064736f6c63430008040033",
    "devdoc": {
        "author": "Nugg Labs - @danny7even & @dub6ix",
        "details": "hold my margarita",
        "kind": "dev",
        "methods": {},
        "title": "DotNugg V1 - onchain encoder/decoder for dotnugg files",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "yoU CAN'T HaVe ImAgES oN THe BlOCkcHAIn",
        "version": 1
    },
    "storageLayout": {
        "storage": [],
        "types": null
    }
}
